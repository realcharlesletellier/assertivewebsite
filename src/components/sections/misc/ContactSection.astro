---
import AuthBtn from "@components/ui/buttons/AuthBtn.astro";
import ContactIconBlock from "@components/ui/blocks/ContactIconBlock.astro";
import TextInput from "@components/ui/forms/input/TextInput.astro";
import EmailContactInput from "@components/ui/forms/input/EmailContactInput.astro";
import TextAreaInput from "@components/ui/forms/input/TextAreaInput.astro";
import Icon from "@components/ui/icons/Icon.astro";
export const prerender = true;

const title: string = "Contact us";
const subTitle: string =
  "Have questions or want to discuss integrating Assertive AI? Reach out, and let's discuss the perfect plan for you.";
const formTitle: string = "Fill in the form below";
const formSubTitle: string = "We'll get back to you in 1-2 business days.";
---

<!-- Contact Us -->
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
        {subTitle}
      </p>
    </div>

    <!-- Centered Form -->
    <div class="mt-12 flex flex-col items-center justify-center">
      <div
        class="w-full max-w-lg rounded-xl bg-white p-4 shadow-md dark:bg-neutral-800 sm:p-6 lg:p-8"
      >
        <h2
          class="mb-8 text-xl font-bold text-neutral-700 dark:text-neutral-300"
        >
          {formTitle}
        </h2>
        <!-- Form for user input with various input fields -->
        <form id="contact-form" class="contact-form" method="POST">
          <div class="grid gap-4">
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <TextInput
                id="first-name"
                label="First Name"
                name="first_name"
                required
              />
              <TextInput
                id="last-name"
                label="Last Name"
                name="last_name"
                required
              />
            </div>
            <EmailContactInput id="email" label="Email" name="email" required />
            <TextAreaInput
              id="details"
              label="Details"
              name="details"
              required
            />
            <!-- Honeypot Field -->
            <div class="hidden">
              <label>
                Donâ€™t fill this out if you're human: <input name="bot-field" />
              </label>
            </div>
          </div>

          <div class="mt-4 grid">
            <AuthBtn type="submit" title="Send Message" />
          </div>

          <div class="mt-3 text-center">
            <p class="text-sm text-neutral-600 dark:text-neutral-400">
              {formSubTitle}
            </p>
          </div>

          <!-- Feedback Messages -->
          <div id="form-feedback" class="mt-4 text-center"></div>
        </form>
      </div>
    </div>
  </div>

  <!-- ContactIconBlocks are used to display different methods of contacting, including visiting office, email, browsing knowledgebase, and FAQ. -->

  <ContactIconBlock
    heading="Contact us by email"
    content="Prefer the written word? Drop us an email at"
    isLinkVisible={true}
    linkTitle="charles@assertiveai.ca"
    linkURL="mailto:charles@assertiveai.ca"
    ><Icon name="envelopeOpen" />
  </ContactIconBlock>
</section>

<script type="module">
  // Client-side form handling
  const form = document.getElementById("contact-form");
  const feedback = document.getElementById("form-feedback");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    feedback.textContent = "Sending...";

    const formData = new FormData(form);

    // Convert FormData to JSON
    const data = Object.fromEntries(formData.entries());

    try {
      const response = await fetch("/.netlify/functions/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (response.ok) {
        feedback.textContent = result.msg;
        form.reset();
      } else {
        feedback.textContent = `Error: ${result.msg}`;
      }
    } catch (error) {
      console.error("Error submitting form:", error);
      feedback.textContent = "An unexpected error occurred.";
    }
  });
</script>
