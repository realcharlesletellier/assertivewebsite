---
// Destructure the properties from Astro.props
const { url, name } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  url: string;
  name: string;
}
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home' 
-->
<a
  id={url === "/" ? "home" : url.replace("/", "")}
  href={url}
  data-astro-prefetch
  class="nav-link"
>
  {name}
</a>

<style>
/* Base styles */
.nav-link {
  position: relative;
  display: inline-block;
  text-decoration: none;
  color: #4b5563; /* Neutral 600 */
  transition: color 0.2s;
}

.nav-link:hover {
  color: #3e6cff;
}

/* Hover underline animation */
.nav-link::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0%;
  height: 2px;
  background-color: #3e6cff;
  transition: width 0.3s ease-in-out;
}

.nav-link:hover::after {
  width: 100%;
}

/* Active state styles */
.nav-link.active {
  color: #3e6cff;
}

.nav-link.active::after {
  width: 100%;
}
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let url = window.location.pathname;
    let urlSegments = url.split("/");
    let navId;

    if (url === "/") {
      navId = "home";
    } else {
      navId = url.replace("/", "");
    }

    let nav = document.getElementById(navId);

    if (nav) {
      nav.classList.add("active");
      nav.setAttribute("aria-current", "page");
    }
  });
</script>
